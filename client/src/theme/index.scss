@use "sass:map";
@use "sass:color";

$themes: (
    light: (
        bg_0: #fff,
        // bg_1: #E5E5E5,
        // bg_2: #ccc,
        // bg_3: #B2B2B2,
        bg_1: #fff,
        bg_2: #fff,
        bg_3: #fff,
        text_0: #181818,
        text_1: #484848,
        theme_toggle_outer: #f1ce06,
        theme_toggle_inner: color.adjust(#f1ce06, $lightness: 30%),
        shadow: #d4d4d4,
    ),
    dark: (
        bg_0: #181818,
        bg_1: #323232,
        bg_2: #484848,
        bg_3: #626262,
        text_0: #fff,
        text_1: #aaa,
        theme_toggle_outer: #fff,
        theme_toggle_inner: color.adjust(#181818, $lightness: 16%),
        shadow: transparent,
    ),
);

@mixin themed() {
    @each $theme, $map in $themes {
        :global(.theme--#{$theme}) & {
            $theme-map: (
                ) !global;

            @each $key, $submap in $map {
                $value: map.get(map.get($themes, $theme), '#{$key}'
                );
            $theme-map: map.merge($theme-map, ($key: $value)) !global;
        }

        @content;
        $theme-map: null !global;
    }
}
}

@function getThemeColor($key) {
    @return map.get($theme-map, $key);
}